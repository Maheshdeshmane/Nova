@model Nova.Models.BaseRequest
@using Nova.common
@{
    ViewBag.Title = "Index";
}

<link href="~/Content/home/index.css" rel="stylesheet" />
<script src="~/Scripts/Home/home.js"></script>
<script src='http://maps.googleapis.com/maps/api/js?v=3&sensor=false&amp;libraries=places&key=AIzaSyDvQQECrBxQeVFT67GjjtJZwqRBbLOGbio'></script>
<br>
<div class="container">
    <div class="row">
        <div class="col-sm-3">
            <form>
                <div class="well">
                    
                    <h3 class="text-bold text-primary">Discount Finder</h3>
                    Find the discounted retail shop in your locality...
                    <hr>
                    
                        <div class="row">Choose</div>
                        <div class="row row-m-t">
                            @Html.DropDownListFor(model => model.selectedCategory, Model.category, "Department", new { @class = "form-control", @onchange = "FillSubCatgory(this)" })
                        </div>
                        <div class="row row-m-t">
                            @Html.DropDownListFor(model => model.selectedSubCategory, Model.subCategory, "Sub Category", new { @class = "form-control" })
                        </div>
                        <div class="row">Locality</div>
                        <div class="row row row-m-t">
                            @Html.TextBoxFor(model => model.lookingAt, new { @class = "form-control", @placeholder = "Type location from list" })
                        </div>
                        <div class="row">Keyword/s (optional)</div>
                        <div class="row row row-m-t">
                            @Html.TextBoxFor(model => model.lookingFor, new { @class = "form-control", @placeholder = "e.g. Jeans or TV or Gym" })
                        </div>
                        <div class="row">Sort By:</div>
                        <div class="row row row-m-t">
                            @Html.DropDownListFor(model => model.lookingBy,
             new SelectList(Enum.GetValues(typeof(SortBy))), new { @class = "form-control" })
                        </div>
                        <div class="row">Search Till KM:</div>
                        <div class="row row row-m-t">
                            @Html.TextBoxFor(model => model.lookingTillDistance, new { @class = "form-control", @placeholder = "search distance in KM for eg 20" })
                        </div>
                        <hr>
                        <div class="row">
                            <button type="submit" id="btnSearch" class="btn btn-success btn-block ">Search</button>
                        </div>
                        @Html.HiddenFor(model => model.lookingAtLat)
                        @Html.HiddenFor(model => model.lookingAtLng)
                    
                </div>

            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(document.getElementById('lookingAt'));
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            document.getElementById('lookingAtLat').value = place.geometry.location.lat();
            document.getElementById('lookingAtLng').value = place.geometry.location.lng();
        });
    });

    function FillSubCatgory(item) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#selectedSubCategory").html(procemessage).show();
        var url = "/Home/GetSubCatgoryByCategoryId/";

        $.ajax({
            url: url,
            data: { stateid: item.value },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Sub Category</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#selectedSubCategory").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
</script>